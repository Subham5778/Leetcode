public class Solution {
    public static boolean canBeValid(String s, String locked) {
        int n = s.length();
        if (n % 2 != 0) {
            return false; 
        }

        int openCount = 0, closeCount = 0;

       
        for (int i = 0; i < n; i++) {
            if (locked.charAt(i) == '0' || s.charAt(i) == '(') {
                openCount++;
            } else {
                closeCount++;
            }
            if (closeCount > openCount) {
                return false; 
            }
        }

        openCount = 0;
        closeCount = 0;


        for (int i = n - 1; i >= 0; i--) {
            if (locked.charAt(i) == '0' || s.charAt(i) == ')') {
                closeCount++;
            } else {
                openCount++;
            }
            if (openCount > closeCount) {
                return false; 
            }
        }

        return true;
    }

}
