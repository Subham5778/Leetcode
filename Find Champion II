class Solution {
    public int findChampion(int n, int[][] edges) {
        //Step1: Initialize indegree array
        int[] inDegree = new int[n];

        //Step2: Calculate indegrees for each node
        for(int[] edge : edges)
            inDegree[edge[1]]++;

        //Step3: Find nodes with indegree 0
        int champion = -1;
        for(int i = 0; i < n; i++) {
            if(inDegree[i] == 0) {
                //If there is already another node with indegree 0,
                //Return -1;
                if(champion != -1)
                    return -1;
            //Set the current node as potential champion
            champion = i;
            }            
        }

        //Step 4 : Return the unique champion or -1 if no champion
        return champion;
        
    }
}
