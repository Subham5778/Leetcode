class Solution {
    public int shortestSubarray(int[] nums, int k) {
        int n = nums.length;
        long sum=0;
        int res = Integer.MAX_VALUE;

        long[] prefix = new long[n+1];
        for(int i=0;i<n;i++){
            prefix[i+1] = prefix[i] + nums[i];
        }

        Deque<Integer> dq = new ArrayDeque<>();
        for(int i=0; i<n+1;i++){
            while(!dq.isEmpty() && (prefix[i] - prefix[dq.peekFirst()]) >=k){
                res = Math.min(res,i-dq.pollFirst());
            }
            while(!dq.isEmpty() && prefix[dq.peekLast()]>=prefix[i]){
                dq.pollLast();
            }

            dq.add(i);
        }
        return res==Integer.MAX_VALUE?-1:res;
        
    }
}
